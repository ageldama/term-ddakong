* ddakong / Plugin APIs

  | DLL API                                | Lua API          |
  |----------------------------------------+------------------|
  | =get_plugin_funcs=                     | N/A [fn:1]       |
  | =get_plugin_funcs_len=                 | N/A [fn:1]       |
  |----------------------------------------+------------------|
  | =get_current_handle_input_fn=          | (동일)           |
  | =set_current_handle_input_fn=          | (동일)           |
  |----------------------------------------+------------------|
  | =get_current_handle_input_status=      | N/A [fn:2]       |
  | =set_current_handle_input_status=      | N/A [fn:2]       |
  |----------------------------------------+------------------|
  | =hangeul2_im_handler_status_empty=     | N/A [fn:2]       |
  | =hangeul2_handle_stdin=                | N/A [fn:2]       |
  | =get_current_hangeul_automata_status=  | N/A [fn:2]       |
  |----------------------------------------+------------------|
  | =ERR_err_p=                            | (동일)           |
  | =ERR_clear=                            | (동일)           |
  | =ERR_set=                              | (동일)           |
  | =ERR_set_nofree=                       | N/A              |
  | =ERR_dieif=                            | (동일)           |
  | =ERR_warn_and_clear_if=                | (동일)           |
  | N/A [fn:3]                             | =ERR_get_errmsg= |
  |----------------------------------------+------------------|
  | =cp_fd=                                | (동일)           |
  | =fcntl_nb=                             | (동일)           |
  |----------------------------------------+------------------|
  | =print_banner=                         | (동일)           |
  | =get_verbose_flag=                     | (동일)           |
  | =set_verbose_flag=                     | (동일)           |
  | =get_keylog_filename=                  | (동일)           |
  | =get_default_keylog_filename=          | (동일)           |
  | =get_plugin_dll_filename=              | (동일)           |
  | =get_child_pid=                        | (동일)           |
  | =get_child_fd=                         | (동일)           |
  | =winsz_update=                         | (동일)           |
  | =unicode_to_utf8=                      | (동일)           |
  | =termios__init=                        | (동일)           |
  | =termios__reset=                       | (동일)           |
  | =signal_trap_norecover=                | (동일)           |
  | =forkpty_with_exec=                    | (동일)           |
  | =kill_forkpty=                         | (동일)           |
  | N/A [fn:4]                             | =fdread=         |
  | N/A [fn:4]                             | =fdwrite=        |
  |----------------------------------------+------------------|
  | =hangeul_const_chojungjong_nul=        | N/A [fn:2]       |
  | =hangeul_const_choseong=               | N/A [fn:2]       |
  | =hangeul_const_jungseong=              | N/A [fn:2]       |
  | =hangeul_const_jongseong=              | N/A [fn:2]       |
  | =hangeul_const_moeum=                  | N/A [fn:2]       |
  | =hangeul_const_jaeum=                  | N/A [fn:2]       |
  |----------------------------------------+------------------|
  | =hangeul_automata_status__new=         | N/A [fn:2]       |
  | =hangeul_automata_status__delete=      | N/A [fn:2]       |
  | =hangeul_automata_status__get_stage=   | N/A [fn:2]       |
  | =hangeul_automata_status__set_stage=   | N/A [fn:2]       |
  | =hangeul_automata_status__get_prev_ch= | N/A [fn:2]       |
  | =hangeul_automata_status__set_prev_ch= | N/A [fn:2]       |
  | =hangeul_automata_status__get_cho=     | N/A [fn:2]       |
  | =hangeul_automata_status__set_cho=     | N/A [fn:2]       |
  | =hangeul_automata_status__get_jung=    | N/A [fn:2]       |
  | =hangeul_automata_status__set_jung=    | N/A [fn:2]       |
  | =hangeul_automata_status__get_jong=    | N/A [fn:2]       |
  | =hangeul_automata_status__set_jong=    | N/A [fn:2]       |
  |----------------------------------------+------------------|
  | =hangeul_clear_automata_status=        | N/A [fn:2]       |
  | =hangeul_flush_automata_status=        | N/A [fn:2]       |
  |----------------------------------------+------------------|
  | =hangeul_auto_compose_to_unicode=      | N/A [fn:2]       |
  | =hangeul_full_compose_to_unicode=      | N/A [fn:2]       |
  | =hangeul_jamo_compose_to_unicode=      | N/A [fn:2]       |
  | =hangeul_jamo_jaeum_to_unicode=        | N/A [fn:2]       |
  | =hangeul_partial_jamo_p=               | N/A [fn:2]       |
  | =hangeul_empty_automata_status_p=      | N/A [fn:2]       |
  | =hangeul_2beol_alpha_as_jamoeum=       | N/A [fn:2]       |
  | =hangeul_2beol_fill=                   | N/A [fn:2]       |
  | =hangeul_2beol_find_code=              | N/A [fn:2]       |
  | =hangeul_double_jaeum=                 | N/A [fn:2]       |
  | =hangeul_put_unicode=                  | N/A [fn:2]       |
  | =hangeul_decompose_jongseong=          | N/A [fn:2]       |
  | =hangeul_2beol_commit_1_and_flush=     | N/A [fn:2]       |
  | =hangeul_put_jamo_unicode=             | N/A [fn:2]       |
  | =hangeul_remap_code=                   | N/A [fn:2]       |

  1) 이하에 모든 함수와 타입을 설명하지 않음.
     - 주로 Lua scripting을 하는데 필요한 내용 위주로 설명.

* Plugin DLL entrypoints

** DLL Entry: =ddakong_plugin_entry=

   PLUGIN DLL에서 찾아 실행할 ddakong_plugin_entry() 함수의 타입

   - 반드시 이 함수를 구현/노출하여 ddakong와 플러그인을 연결합니다.
   - 최초에 플러그인이 사용할 수 있는 함수포인터의 목록을 전달 받는 역할.


 #+begin_src c
 typedef void (*ddakong_plugin_entry_fn_t)
 (const plugin_func_t *funcs, const ssize_t funcs_len);
 #+end_src


** DLL Exit: =ddakong_plugin_deinit=
  PLUGIN DLL에서 deinitialization시 호출할 함수의 타입

  - 해제할 자원이 있는 경우, 이 함수를 구현/노출하여 플러그인의
    deinitialization을 수행합니다.


  #+begin_src c
 typedef void (*ddakong_plugin_deinit_fn_t)();
  #+end_src


* C API =get_plugin_funcs=

  - ddakong이 노출하는 플러그인이 호출할 수 있는 함수포인터의 목록.

  #+begin_src c
    plugin_func_t *get_plugin_funcs(void)
  #+end_src

* C API =get_plugin_funcs=

  - ddakong이 노출하는 플러그인이 호출할 수 있는 함수포인터의 목록의 길이.

  #+begin_src c
    ssize_t get_plugin_funcs_len(void);
  #+end_src


* C TYPE =plugin_func_t=
  로딩한 DLL 파일의 * ddakong_plugin_entry() 함수에 전달할 함수포인터
  배열의 행타입.

  - @field =p_func= 함수포인터
  - @field =sz_func_name= 함수의 이름 (예: "printf")
  - @field =sz_func_doc= 함수설명 (예: "prints somethign")

#+begin_src c
typedef struct {
  void *p_func;
  char *sz_func_name;
  char *sz_func_doc;
} plugin_func_t;
#+end_src


* C API =get_current_handle_input_fn=
  입력처리기 handle_input_fn 함수포인터 설정하기

  #+begin_src c
    handle_input_fn_t get_current_handle_input_fn(void);
  #+end_src


* Lua API =get_current_handle_input_fn=
  1. 현재 설정된 입력처리기 함수객체
     1. C-function 포인터이거나
     2. Lua-function값


* C API =set_current_handle_input_fn=
  입력처리기 handle_input_fn 함수포인터 얻기

  #+begin_src c
    handle_input_fn_t get_current_handle_input_fn(void);
  #+end_src


* Lua API =set_current_handle_input_fn=
  입력처리기 함수를 설정:

  #+begin_src lua
    -- set_current_handle_input_fn 예시:
    ddakong.set_current_handle_input_fn(
       function(fd_keyin, fd_child)
          -- 입력을 읽어서:
          local buf = ddakong.fdread(fd_keyin, 1)
          -- 그대로 전달:
          ddakong.fdwrite(fd_child, buf)
       end)
  #+end_src


* C TYPE =handle_input_fn_t=
  입력처리기 함수 타입

  플러그인 등에서 이 타입의 함수포인터를 제공하여 override 가능.

  - @param =p_status= (non-null) 상태구조체
  - @param =fd_keyin= 입력을 read()-할 file-descriptor
  - @param =fd_child= 입력을 write()-전달할 대상 file-descriptor
  - @param =buf= 입력을 read()/read() 저장/전달할 버퍼
  - @param =buf_max= `buf'-의 최대크기
  - @param =write_cb= write()-이후에 호출할 콜백함수
  - @param =write_cb_aux= 콜백함수 호출시 함께 전달할 데이터 (closure)

  #+begin_src c
typedef void (*handle_input_fn_t)
(void *p_status,
 const int fd_keyin,
 const int fd_child,
 BYTE *buf,
 const ssize_t buf_max,
 handle_write_to_child_cb_t write_cb,
 void *write_cb_aux);
  #+end_src


* Lua API =get_verbose_flag= / =set_verbose_flag=


* Lua API =get_keylog_filename=


* Lua API =get_default_keylog_filename=


* Lua API =get_plugin_dll_filename=


* Lua API =get_child_pid=


* Lua API =get_child_fd=


* Lua API =winsz_update=


* Lua API =unicode_to_utf8=


* Lua API =termios__init= / =termios__reset=


* Lua API =signal_trap_norecover=


* Lua API =forkpty_with_exec= / =kill_forkpty=


* Lua API =fdread= / =fdwrite=




* Footnotes
[fn:4] 루아에는 없는 Unix file-descriptor read/write 지원.

[fn:3] 루아는 C구조체 필드에 접근할 수 없으므로 지원.
[fn:2] 루아 스크립팅은 내장 한글입력기 연동 지원 않음.

[fn:1] ~ddakong~ lua module이 어차피 모든 API함수들을 노출하고
있으므로 불필요.
